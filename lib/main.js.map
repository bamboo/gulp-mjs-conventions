{"version":3,"sources":["lib/main.mjs"],"names":["require","install","gulp","gutil","mjs","mocha","es","path","module","exports","paths","ignoreErrors","false","onError","err","log","stack","colors","red","message","_$8","emit","process","exit","_$6","combine","pipeline","apply","null","arguments","where","predicate","map","data","callback","isJavascriptFile","f","extname","javascriptFiles","compile","src","dest","true","on","testWithReporter","reporter","srcTest","destTest","task","console","srcMeta","destMeta","srcLib","destLib","watch","jsMeta","_$3","undefined"],"mappings":"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","sourcesContent":["require('source-map-support').install()\n#external\n  arguments\n  module\n  process\n\nvar\n  gulp = require 'gulp'\n  gutil = require 'gulp-util'\n  mjs = require 'gulp-mjs'\n  mocha = require 'gulp-mocha'\n  es = require 'event-stream'\n  path = require 'path'\n\n\nmodule.exports = gulp -> do!\n\n  var\n    paths = {\n      src-meta: 'meta/**/*.mjs'\n      src-lib: 'lib/**/*.mjs'\n      src-test: 'test/**/*.mjs'\n      dest-meta: 'meta'\n      dest-lib: 'lib'\n      dest-test: 'test'\n    }\n\n    ignore-errors = false\n\n    on-error = err ->\n      gutil.log(err.stack || (gutil.colors.red(err.message)) || err)\n      if (ignore-errors)\n        this.emit('end')\n      else\n        process.exit 1\n\n    combine = #-> es.pipeline.apply(null, arguments)\n\n    where = predicate ->\n      es.map\n        (data, callback) ->\n          if (predicate(data))\n            callback(null, data)\n          else\n            callback()\n\n    javascript-file? = f -> f.path && (path.extname (f.path)) == '.js'\n    javascriptFiles = #-> where javascript-file?\n\n    compile = (src, dest) -> combine\n      gulp.src src\n      (mjs {debug: true}).on('error', on-error)\n      gulp.dest dest\n\n    test-with-reporter = reporter -> combine\n      compile(paths.src-test, paths.dest-test)\n      javascriptFiles()\n      (mocha {reporter: reporter}).on('error', on-error)\n\n  gulp.task\n    'build-meta'\n    #->\n      console.log \" *** build-meta\"\n      compile(paths.src-meta, paths.dest-meta)\n\n  gulp.task\n    'build'\n    ;['build-meta']\n    #-> compile([paths.src-meta, paths.src-lib], paths.dest-lib)\n\n  gulp.task\n    'test'\n    ['build']\n    #-> testWithReporter 'spec'\n\n  gulp.task\n    'test-xunit'\n    ['build']\n    #-> testWithReporter 'xunit-file'\n\n  gulp.task\n    'autotest'\n    ['build']\n    #->\n      ignore-errors = true\n      gulp.watch([paths.src-meta, paths.js-meta, paths.src-lib, paths.src-test], ['test'])\n\n  gulp.task('default', ['test']);\n\n"]}